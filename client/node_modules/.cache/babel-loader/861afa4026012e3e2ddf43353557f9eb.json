{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const contactsApi = createApi({\n  reducerPath: 'contacts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      const token = getState().auth.token;\n\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n\n      return headers;\n    }\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => ({\n        url: '/contacts'\n      }),\n      keepUnusedDataFor: 0,\n      providesTags: ['Contact']\n    }),\n    creatContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact\n      }),\n      invalidatesTags: ['Contact']\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Contact']\n    }),\n    editContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'PATCH'\n      }),\n      invalidatesTags: ['Contact']\n    })\n  })\n});\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useCreatContactMutation,\n  useEditContactMutation\n} = contactsApi;","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/src/redux/contacts/contactsSlice.js"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","getState","token","auth","set","tagTypes","endpoints","builder","getContacts","query","url","keepUnusedDataFor","providesTags","creatContact","mutation","newContact","method","body","invalidatesTags","deleteContact","contactId","editContact","useGetContactsQuery","useDeleteContactMutation","useCreatContactMutation","useEditContactMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,UADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACxBI,IAAAA,OAAO,EAAE,uCADe;AAExBC,IAAAA,cAAc,EAAE,CAACC,OAAD,WAA2B;AAAA,UAAjB;AAAEC,QAAAA;AAAF,OAAiB;AACzC,YAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B;;AACA,UAAIA,KAAJ,EAAW;AACTF,QAAAA,OAAO,CAACI,GAAR,CAAY,eAAZ,EAA8B,UAASF,KAAM,EAA7C;AACD;;AACD,aAAOF,OAAP;AACD;AARuB,GAAD,CAFU;AAYnCK,EAAAA,QAAQ,EAAE,CAAC,SAAD,CAZyB;AAanCC,EAAAA,SAAS,EAAEC,OAAO,KAAK;AACrBC,IAAAA,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;AACzBA,MAAAA,KAAK,EAAE,OAAO;AACZC,QAAAA,GAAG,EAAE;AADO,OAAP,CADkB;AAIzBC,MAAAA,iBAAiB,EAAE,CAJM;AAKzBC,MAAAA,YAAY,EAAE,CAAC,SAAD;AALW,KAAd,CADQ;AASrBC,IAAAA,YAAY,EAAEN,OAAO,CAACO,QAAR,CAAiB;AAC7BL,MAAAA,KAAK,EAAEM,UAAU,KAAK;AACpBL,QAAAA,GAAG,EAAE,WADe;AAEpBM,QAAAA,MAAM,EAAE,MAFY;AAGpBC,QAAAA,IAAI,EAAEF;AAHc,OAAL,CADY;AAM7BG,MAAAA,eAAe,EAAE,CAAC,SAAD;AANY,KAAjB,CATO;AAiBrBC,IAAAA,aAAa,EAAEZ,OAAO,CAACO,QAAR,CAAiB;AAC9BL,MAAAA,KAAK,EAAEW,SAAS,KAAK;AACnBV,QAAAA,GAAG,EAAG,aAAYU,SAAU,EADT;AAEnBJ,QAAAA,MAAM,EAAE;AAFW,OAAL,CADc;AAK9BE,MAAAA,eAAe,EAAE,CAAC,SAAD;AALa,KAAjB,CAjBM;AAwBrBG,IAAAA,WAAW,EAAEd,OAAO,CAACO,QAAR,CAAiB;AAC5BL,MAAAA,KAAK,EAAEW,SAAS,KAAK;AACnBV,QAAAA,GAAG,EAAG,aAAYU,SAAU,EADT;AAEnBJ,QAAAA,MAAM,EAAE;AAFW,OAAL,CADY;AAK5BE,MAAAA,eAAe,EAAE,CAAC,SAAD;AALW,KAAjB;AAxBQ,GAAL;AAbiB,CAAD,CAA7B;AA+CP,OAAO,MAAM;AACXI,EAAAA,mBADW;AAEXC,EAAAA,wBAFW;AAGXC,EAAAA,uBAHW;AAIXC,EAAAA;AAJW,IAKT9B,WALG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contacts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => ({\n        url: '/contacts',\n      }),\n      keepUnusedDataFor: 0,\n      providesTags: ['Contact'],\n    }),\n\n    creatContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    editContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'PATCH',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useCreatContactMutation,\n  useEditContactMutation,\n} = contactsApi;\n"]},"metadata":{},"sourceType":"module"}