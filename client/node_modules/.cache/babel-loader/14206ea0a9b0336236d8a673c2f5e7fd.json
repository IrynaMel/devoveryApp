{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\client\\\\src\\\\views\\\\shopView.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useGetProductsQuery } from 'redux/products/productsSlice';\nimport get from '../components/API/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopView = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useGetProductsQuery(); //   const [products, setProducts] = useState([]);\n\n  const [filter, setFilter] = useState('');\n  const [cart, setCart] = useState([]);\n  const allProductInTheCard = [];\n\n  const onAdd = product => {\n    const exist = cart.find(item => item.id === product);\n\n    if (exist) {\n      setCart(cart.map(item => item.id === product ? { ...exist,\n        qty: exist.qty + 1\n      } : item));\n    } else {\n      setCart([...cart, {\n        id: product,\n        qty: 1\n      }]);\n    }\n  };\n\n  console.log(cart);\n\n  const getCart = () => {\n    cart.forEach(_ref => {\n      let {\n        id,\n        qty\n      } = _ref;\n      get.getOneProduct(id).then(data => {\n        const result = data.data.data.result; //  = result;\n\n        const heg = {\n          qty,\n          result\n        };\n        allProductInTheCard.push(heg);\n      }).catch(error => console.log(error));\n    });\n    console.log(allProductInTheCard);\n  };\n\n  console.log(data); //   useEffect(() => {\n  //     get\n  //       .FetchProducts()\n  //       .then(data => {\n  //         setProducts(data.data.data.result);\n  //       })\n  //       .catch(error => console.log(error));\n  //   }, []);\n\n  const uArray = array => {\n    var out = [];\n\n    for (var i = 0, len = array.length; i < len; i++) if (out.indexOf(array[i]) === -1) out.push(array[i]);\n\n    return out;\n  }; //   const allShops = products.map(item => item.shop);\n  //   const shops = uArray(allShops);\n  //   const filteredProducts = products?.filter(item => item.shop === filter);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setFilter(''),\n      children: \"All shops\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopView, \"yoRobPvDdlQtqgxaAvsAdoi++Qo=\", false, function () {\n  return [useGetProductsQuery];\n});\n\n_c = ShopView;\nexport default ShopView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopView\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/views/shopView.js"],"names":["useEffect","useState","useGetProductsQuery","get","ShopView","data","isLoading","filter","setFilter","cart","setCart","allProductInTheCard","onAdd","product","exist","find","item","id","map","qty","console","log","getCart","forEach","getOneProduct","then","result","heg","push","catch","error","uArray","array","out","i","len","length","indexOf"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useGetProductsQuery } from 'redux/products/productsSlice';\r\n\r\nimport get from '../components/API/Api';\r\n\r\nconst ShopView = () => {\r\n  const { data, isLoading } = useGetProductsQuery();\r\n  //   const [products, setProducts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const allProductInTheCard = [];\r\n\r\n  const onAdd = product => {\r\n    const exist = cart.find(item => item.id === product);\r\n    if (exist) {\r\n      setCart(\r\n        cart.map(item =>\r\n          item.id === product ? { ...exist, qty: exist.qty + 1 } : item\r\n        )\r\n      );\r\n    } else {\r\n      setCart([...cart, { id: product, qty: 1 }]);\r\n    }\r\n  };\r\n  console.log(cart);\r\n\r\n  const getCart = () => {\r\n    cart.forEach(({ id, qty }) => {\r\n      get\r\n        .getOneProduct(id)\r\n        .then(data => {\r\n          const result = data.data.data.result;\r\n          //  = result;\r\n          const heg = { qty, result };\r\n          allProductInTheCard.push(heg);\r\n        })\r\n        .catch(error => console.log(error));\r\n    });\r\n    console.log(allProductInTheCard);\r\n  };\r\n\r\n  console.log(data);\r\n\r\n  //   useEffect(() => {\r\n  //     get\r\n  //       .FetchProducts()\r\n  //       .then(data => {\r\n  //         setProducts(data.data.data.result);\r\n  //       })\r\n  //       .catch(error => console.log(error));\r\n  //   }, []);\r\n\r\n  const uArray = array => {\r\n    var out = [];\r\n    for (var i = 0, len = array.length; i < len; i++)\r\n      if (out.indexOf(array[i]) === -1) out.push(array[i]);\r\n    return out;\r\n  };\r\n  //   const allShops = products.map(item => item.shop);\r\n  //   const shops = uArray(allShops);\r\n\r\n  //   const filteredProducts = products?.filter(item => item.shop === filter);\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={() => setFilter('')}>All shops</p>\r\n      {/* {shops.map(item => {\r\n        return <p onClick={() => setFilter(item)}> {item}</p>;\r\n      })}\r\n      {filter\r\n        ? filteredProducts.map(({ _id, name, price, shop }) => {\r\n            return (\r\n              <li key={_id}>\r\n                <h3>{name}</h3>\r\n                <p>{price}</p>\r\n                <p> {shop}</p>\r\n                <button onClick={() => setCart(() => onAdd(_id))}>\r\n                  Add to Card\r\n                </button>\r\n              </li>\r\n            );\r\n          })\r\n        : products.map(({ _id, name, price, shop }) => {\r\n            return (\r\n              <li key={_id}>\r\n                <h3>{name}</h3>\r\n                <p>{price}</p>\r\n                <p> {shop}</p>\r\n                <button onClick={() => onAdd(_id)}>Add to Card</button>\r\n              </li>\r\n            );\r\n          })}\r\n      <button onClick={() => getCart()}>hhhh</button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopView;\r\n"]},"metadata":{},"sourceType":"module"}