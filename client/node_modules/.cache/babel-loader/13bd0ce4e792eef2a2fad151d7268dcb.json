{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { cartSlice } from './products/productsSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'Cart',\n  storage\n};\nconst persistedClickReducer = persistReducer(persistConfig, cartSlice.reducer);\nexport const store = configureStore({\n  reducer: {\n    Cart: persistedClickReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/redux/store.js"],"names":["configureStore","cartSlice","persistStore","persistReducer","storage","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","persistedClickReducer","reducer","store","Cart","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,QANF,QAOO,eAPP;AASA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA;AAFoB,CAAtB;AAKA,MAAMS,qBAAqB,GAAGV,cAAc,CAACQ,aAAD,EAAgBV,SAAS,CAACa,OAA1B,CAA5C;AAEA,OAAO,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAClCc,EAAAA,OAAO,EAAE;AACPE,IAAAA,IAAI,EAAEH;AADC,GADyB;AAIlCI,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACf,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AALY,CAAD,CAA5B;AAYP,OAAO,MAAMW,SAAS,GAAGnB,YAAY,CAACa,KAAD,CAA9B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { cartSlice } from './products/productsSlice';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'Cart',\r\n  storage,\r\n};\r\n\r\nconst persistedClickReducer = persistReducer(persistConfig, cartSlice.reducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    Cart: persistedClickReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}