{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\client\\\\src\\\\components\\\\Routes\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute(_ref) {\n  _s();\n\n  let {\n    children,\n    ...routeProps\n  } = _ref;\n\n  const getIsLoggedIn = state => state.auth.isLoggedIn;\n\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n}\n\n_s(PrivateRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/components/Routes/PrivateRoute.js"],"names":["useSelector","Navigate","PrivateRoute","children","routeProps","getIsLoggedIn","state","auth","isLoggedIn"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAe,SAASC,YAAT,OAAmD;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA6B;;AAChE,QAAMC,aAAa,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,UAA1C;;AACA,QAAMA,UAAU,GAAGR,WAAW,CAACK,aAAD,CAA9B;;AACA,MAAI,CAACG,UAAL,EAAiB;AACf,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAsB,MAAA,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAOL,QAAP;AACD;;GAPuBD,Y;UAEHF,W;;;KAFGE,Y","sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport default function PrivateRoute({ children, ...routeProps }) {\n  const getIsLoggedIn = state => state.auth.isLoggedIn;\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" replace />;\n  }\n  return children;\n}\n"]},"metadata":{},"sourceType":"module"}