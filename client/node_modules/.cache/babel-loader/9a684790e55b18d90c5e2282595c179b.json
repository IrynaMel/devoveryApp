{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\src\\\\components\\\\Routes\\\\PublicRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PublicRoute(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  const getIsLoggedIn = state => state.auth.isLoggedIn;\n\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn;\n  return shouldRedirect ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/contacts\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 27\n  }, this) : children;\n}\n\n_s(PublicRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c = PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/src/components/Routes/PublicRoute.js"],"names":["useSelector","Navigate","PublicRoute","children","getIsLoggedIn","state","auth","isLoggedIn","shouldRedirect"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAe,SAASC,WAAT,OAAmC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;;AAChD,QAAMC,aAAa,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,UAA1C;;AACA,QAAMA,UAAU,GAAGP,WAAW,CAACI,aAAD,CAA9B;AACA,QAAMI,cAAc,GAAGD,UAAvB;AACA,SAAOC,cAAc,gBAAG,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,WAAb;AAAyB,IAAA,OAAO;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAH,GAAyCL,QAA9D;AACD;;GALuBD,W;UAEHF,W;;;KAFGE,W","sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport default function PublicRoute({ children }) {\n  const getIsLoggedIn = state => state.auth.isLoggedIn;\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn;\n  return shouldRedirect ? <Navigate to=\"/contacts\" replace /> : children;\n}\n"]},"metadata":{},"sourceType":"module"}