{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\src\\\\components\\\\Filter\\\\Filter.js\",\n    _s = $RefreshSig$();\n\n// import PropTypes from 'prop-types';\nimport { myFilter } from 'redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = () => {\n  _s();\n\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(myFilter(e.currentTarget.value.trim().toLowerCase()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Find contacts by name\",\n      color: \"secondary\",\n      type: \"text\",\n      name: \"filter\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true,\n      value: filter,\n      onChange: onFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; // Filter.propTypes = {\n//   filter: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\n\n_s(Filter, \"Zi2mTFkYFhSUm77wfbdijEI/0lI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/src/components/Filter/Filter.js"],"names":["myFilter","useDispatch","useSelector","TextField","Filter","filter","state","dispatch","onFilter","e","currentTarget","value","trim","toLowerCase"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,4BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,QAAQ,GAAGC,CAAC,IAAI;AACpBF,IAAAA,QAAQ,CAACP,QAAQ,CAACS,CAAC,CAACC,aAAF,CAAgBC,KAAhB,CAAsBC,IAAtB,GAA6BC,WAA7B,EAAD,CAAT,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,OAAO,EAAC,wHALV;AAME,MAAA,KAAK,EAAC,wIANR;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,KAAK,EAAER,MART;AASE,MAAA,QAAQ,EAAEG;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvBD,C,CAyBA;AACA;AACA;AACA;;;GA5BMJ,M;UACWF,W,EACED,W;;;KAFbG,M;AA8BN,eAAeA,MAAf","sourcesContent":["// import PropTypes from 'prop-types';\nimport { myFilter } from 'redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(myFilter(e.currentTarget.value.trim().toLowerCase()));\n  };\n\n  return (\n    <div>\n      <TextField\n        label=\"Find contacts by name\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={onFilter}\n      />\n    </div>\n  );\n};\n\n// Filter.propTypes = {\n//   filter: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}