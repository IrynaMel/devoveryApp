{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: [],\n  reducers: {\n    addToCart(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      const exist = state.Cart.find(item => item._id === payload._id);\n\n      if (exist) {\n        return state.map(item => item._id === payload._id ? { ...payload,\n          qty: exist.qty + 1\n        } : item);\n      } else {\n        state.push({ ...payload,\n          qty: 1\n        });\n      }\n    },\n\n    removeFromCard(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      const {\n        qty\n      } = state.find(item => item._id === payload._id);\n\n      if (qty < 1) {\n        // return qty === 0;\n        return state.filter(item => item._id !== payload._id);\n      } else {\n        return state.map(item => item._id === payload._id ? { ...payload,\n          qty: item.qty - 1\n        } : item);\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  removeFromCard\n} = cartSlice.actions;","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/redux/products/productsSlice.js"],"names":["createSlice","cartSlice","name","initialState","reducers","addToCart","state","payload","exist","Cart","find","item","_id","map","qty","push","removeFromCard","filter","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE,EAFqB;AAGnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,QAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAC5B,YAAMC,KAAK,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAA7C,CAAd;;AACA,UAAIJ,KAAJ,EAAW;AACT,eAAOF,KAAK,CAACO,GAAN,CAAUF,IAAI,IACnBA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAArB,GAA2B,EAAE,GAAGL,OAAL;AAAcO,UAAAA,GAAG,EAAEN,KAAK,CAACM,GAAN,GAAY;AAA/B,SAA3B,GAAgEH,IAD3D,CAAP;AAGD,OAJD,MAIO;AACLL,QAAAA,KAAK,CAACS,IAAN,CAAW,EAAE,GAAGR,OAAL;AAAcO,UAAAA,GAAG,EAAE;AAAnB,SAAX;AACD;AACF,KAVO;;AAWRE,IAAAA,cAAc,CAACV,KAAD,SAAqB;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AACjC,YAAM;AAAEO,QAAAA;AAAF,UAAUR,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAAxC,CAAhB;;AACA,UAAIE,GAAG,GAAG,CAAV,EAAa;AACX;AACA,eAAOR,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAA1C,CAAP;AACD,OAHD,MAGO;AACL,eAAON,KAAK,CAACO,GAAN,CAAUF,IAAI,IACnBA,IAAI,CAACC,GAAL,KAAaL,OAAO,CAACK,GAArB,GAA2B,EAAE,GAAGL,OAAL;AAAcO,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAAL,GAAW;AAA9B,SAA3B,GAA+DH,IAD1D,CAAP;AAGD;AACF;;AArBO;AAHyB,CAAD,CAA7B;AA4BP,OAAO,MAAM;AAAEN,EAAAA,SAAF;AAAaW,EAAAA;AAAb,IAAgCf,SAAS,CAACiB,OAAhD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: [],\r\n  reducers: {\r\n    addToCart(state, { payload }) {\r\n      const exist = state.Cart.find(item => item._id === payload._id);\r\n      if (exist) {\r\n        return state.map(item =>\r\n          item._id === payload._id ? { ...payload, qty: exist.qty + 1 } : item\r\n        );\r\n      } else {\r\n        state.push({ ...payload, qty: 1 });\r\n      }\r\n    },\r\n    removeFromCard(state, { payload }) {\r\n      const { qty } = state.find(item => item._id === payload._id);\r\n      if (qty < 1) {\r\n        // return qty === 0;\r\n        return state.filter(item => item._id !== payload._id);\r\n      } else {\r\n        return state.map(item =>\r\n          item._id === payload._id ? { ...payload, qty: item.qty - 1 } : item\r\n        );\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCard } = cartSlice.actions;\r\n"]},"metadata":{},"sourceType":"module"}