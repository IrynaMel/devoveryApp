{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\src\\\\components\\\\ContactList\\\\ContactList.js\",\n    _s = $RefreshSig$();\n\nimport { Li, Ul, P } from './ContactList.styled';\nimport Button from 'components/Button/Button';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n  const visible = data === null || data === void 0 ? void 0 : data.filter(contact => contact.name.toLowerCase().includes(filter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this), data && /*#__PURE__*/_jsxDEV(Ul, {\n      children: visible.map(_ref => {\n        let {\n          id,\n          name,\n          number\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Li, {\n          children: [/*#__PURE__*/_jsxDEV(P, {\n            children: [name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), (visible === null || visible === void 0 ? void 0 : visible.length) === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactList, \"fB/U6XYq6BdpykTCbtyE2ivwmIY=\", false, function () {\n  return [useGetContactsQuery, useSelector];\n});\n\n_c = ContactList;\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/src/components/ContactList/ContactList.js"],"names":["Li","Ul","P","Button","ClipLoader","useSelector","useGetContactsQuery","ContactList","data","isLoading","filter","state","visible","contact","name","toLowerCase","includes","map","id","number","length"],"mappings":";;;AAAA,SAASA,EAAT,EAAaC,EAAb,EAAiBC,CAAjB,QAA0B,sBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBH,mBAAmB,EAA/C;AAEA,QAAMI,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AAEA,QAAME,OAAO,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAAN,CAAaG,OAAO,IAClCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,MAApC,CADc,CAAhB;AAIA,sBACE;AAAA,eACGD,SAAS,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGD,IAAI,iBACH,QAAC,EAAD;AAAA,gBACGI,OAAO,CAACK,GAAR,CAAY;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMJ,UAAAA,IAAN;AAAYK,UAAAA;AAAZ,SAAD;AAAA,4BACX,QAAC,EAAD;AAAA,kCACE,QAAC,CAAD;AAAA,uBAAIL,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,oBACiB;AAAA,sBAAIK;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADjB,eAEE,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASA,EAAT;AAAA;AAAA;AAAA;AAAA,gBADW;AAAA,OAAZ;AADH;AAAA;AAAA;AAAA;AAAA,YAHJ,EAYG,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,MAAT,MAAoB,CAApB,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;GAAMb,W;UACwBD,mB,EAEbD,W;;;KAHXE,W;AA2BN,eAAeA,WAAf","sourcesContent":["import { Li, Ul, P } from './ContactList.styled';\nimport Button from 'components/Button/Button';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n\nconst ContactList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n\n  const visible = data?.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <div>\n      {isLoading && <ClipLoader />}\n      {data && (\n        <Ul>\n          {visible.map(({ id, name, number }) => (\n            <Li key={id}>\n              <P>{name}:</P> <p>{number}</p>\n              <Button id={id} />\n            </Li>\n          ))}\n        </Ul>\n      )}\n      {visible?.length === 0 && <p>no contacts</p>}\n    </div>\n  );\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}