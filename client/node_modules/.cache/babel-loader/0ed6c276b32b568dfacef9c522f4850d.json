{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\client\\\\src\\\\components\\\\Form\\\\ContactsForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Container } from './ContactsForm.styled'; // import { nanoid } from 'nanoid';\n\nimport { useCreatContactMutation, useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact] = useCreatContactMutation();\n  const {\n    data\n  } = useGetContactsQuery();\n  const contacts = data;\n\n  const nameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const numberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      // id: nanoid(),\n      name,\n      number\n    };\n    createContact(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        color: \"secondary\",\n        size: \"small\",\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: nameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        color: \"secondary\",\n        size: \"small\",\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: number,\n        onChange: numberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '20px auto',\n          display: 'block'\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"93DMgkOkVl4h+nQ71ONxgcNv9UA=\", false, function () {\n  return [useCreatContactMutation, useGetContactsQuery];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/components/Form/ContactsForm.js"],"names":["useState","Container","useCreatContactMutation","useGetContactsQuery","Button","TextField","ContactForm","name","setName","number","setNumber","createContact","data","contacts","nameChange","e","currentTarget","value","numberChange","handleSubmit","preventDefault","find","contact","alert","newContact","margin","display"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Container } from './ContactsForm.styled';\n// import { nanoid } from 'nanoid';\nimport {\n  useCreatContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact] = useCreatContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const contacts = data;\n\n  const nameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const numberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      // id: nanoid(),\n      name,\n      number,\n    };\n    createContact(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <p>Name</p>\n        <TextField\n          color=\"secondary\"\n          size=\"small\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={nameChange}\n        />\n        <p>Number</p>\n        <TextField\n          color=\"secondary\"\n          size=\"small\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={numberChange}\n        />\n\n        <Button\n          style={{ margin: '20px auto', display: 'block' }}\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n        >\n          Add Contact\n        </Button>\n      </form>\n    </Container>\n  );\n}\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}