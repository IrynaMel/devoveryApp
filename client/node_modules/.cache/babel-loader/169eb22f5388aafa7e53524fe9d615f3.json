{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/auth-slice';\nimport { contactsApi } from './contacts/contactsSlice';\nimport { filterSlice } from './contacts/filterSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterSlice.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(contactsApi.middleware)\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/src/redux/store.js"],"names":["configureStore","authReducer","contactsApi","filterSlice","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authPersistConfig","key","whitelist","store","reducer","auth","reducerPath","filter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,MADmB;AAExBF,EAAAA,OAFwB;AAGxBG,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAKA,OAAO,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AAClCiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEb,cAAc,CAACQ,iBAAD,EAAoBZ,WAApB,CADb;AAEP,KAACC,WAAW,CAACiB,WAAb,GAA2BjB,WAAW,CAACe,OAFhC;AAGPG,IAAAA,MAAM,EAAEjB,WAAW,CAACc;AAHb,GADyB;AAMlCI,EAAAA,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD,CAApB,CAIGc,MAJH,CAIUvB,WAAW,CAACmB,UAJtB;AAPgC,CAAD,CAA5B;AAcP,OAAO,MAAMK,SAAS,GAAGtB,YAAY,CAACY,KAAD,CAA9B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/auth-slice';\nimport { contactsApi } from './contacts/contactsSlice';\nimport { filterSlice } from './contacts/filterSlice';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterSlice.reducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(contactsApi.middleware),\n});\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}