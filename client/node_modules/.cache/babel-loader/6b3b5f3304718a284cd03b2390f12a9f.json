{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\client\\\\src\\\\views\\\\cartView.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport get from '../API/Api';\nimport Cart from '../components/Cart/Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartView = () => {\n  _s();\n\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: ''\n  });\n  const products = useSelector(state => state.Cart.products);\n\n  const onChange = e => {\n    setState(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const result = products.map(item => Number(item.price) * Number(item.qty));\n  const total = result.reduce((sum, elm) => sum + elm, 0);\n\n  const onOrder = e => {\n    e.preventDefault();\n    const order = { ...state,\n      products,\n      total\n    };\n    console.log(order);\n    get.makeOrder(order);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      styled: {\n        text_align: 'center'\n      },\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Cart, {\n      onOrder: onOrder,\n      state: state,\n      onChange: onChange,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartView, \"fCZ4ZIhfhGB/TO2LVwtRhxYjaGg=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartView;\nexport default CartView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartView\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/views/cartView.js"],"names":["useSelector","useDispatch","useState","get","Cart","CartView","state","setState","name","email","phone","address","products","onChange","e","prevState","target","value","result","map","item","Number","price","qty","total","reduce","sum","elm","onOrder","preventDefault","order","console","log","makeOrder","length","text_align"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,OAAO,EAAE;AAJwB,GAAD,CAAlC;AAOA,QAAMC,QAAQ,GAAGZ,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACF,IAAN,CAAWQ,QAArB,CAA5B;;AAEA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBP,IAAAA,QAAQ,CAACQ,SAAS,IAAI;AACpB,aAAO,EAAE,GAAGA,SAAL;AAAgB,SAACD,CAAC,CAACE,MAAF,CAASR,IAAV,GAAiBM,CAAC,CAACE,MAAF,CAASC;AAA1C,OAAP;AACD,KAFO,CAAR;AAGD,GAJD;;AAMA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,GAAT,CAAaC,IAAI,IAAIC,MAAM,CAACD,IAAI,CAACE,KAAN,CAAN,GAAqBD,MAAM,CAACD,IAAI,CAACG,GAAN,CAAhD,CAAf;AACA,QAAMC,KAAK,GAAGN,MAAM,CAACO,MAAP,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAlC,EAAuC,CAAvC,CAAd;;AACA,QAAMC,OAAO,GAAGd,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACe,cAAF;AACA,UAAMC,KAAK,GAAG,EACZ,GAAGxB,KADS;AAEZM,MAAAA,QAFY;AAGZY,MAAAA;AAHY,KAAd;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA3B,IAAAA,GAAG,CAAC8B,SAAJ,CAAcH,KAAd;AACD,GATD;;AAUA,sBACE;AAAA,cACGlB,QAAQ,CAACsB,MAAT,KAAoB,CAApB,gBACC;AAAG,MAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,IAAD;AACE,MAAA,OAAO,EAAEP,OADX;AAEE,MAAA,KAAK,EAAEtB,KAFT;AAGE,MAAA,QAAQ,EAAEO,QAHZ;AAIE,MAAA,KAAK,EAAEW;AAJT;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAcD,CA1CD;;GAAMnB,Q;UAQaL,W;;;KARbK,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport get from '../API/Api';\r\nimport Cart from '../components/Cart/Cart';\r\n\r\nconst CartView = () => {\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n  });\r\n\r\n  const products = useSelector(state => state.Cart.products);\r\n\r\n  const onChange = e => {\r\n    setState(prevState => {\r\n      return { ...prevState, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const result = products.map(item => Number(item.price) * Number(item.qty));\r\n  const total = result.reduce((sum, elm) => sum + elm, 0);\r\n  const onOrder = e => {\r\n    e.preventDefault();\r\n    const order = {\r\n      ...state,\r\n      products,\r\n      total,\r\n    };\r\n    console.log(order);\r\n    get.makeOrder(order);\r\n  };\r\n  return (\r\n    <>\r\n      {products.length === 0 ? (\r\n        <p styled={{ text_align: 'center' }}>Your cart is empty</p>\r\n      ) : (\r\n        <Cart\r\n          onOrder={onOrder}\r\n          state={state}\r\n          onChange={onChange}\r\n          total={total}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartView;\r\n"]},"metadata":{},"sourceType":"module"}