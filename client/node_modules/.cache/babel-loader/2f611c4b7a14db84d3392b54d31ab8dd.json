{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Irynka\\\\Documents\\\\devoveryApp\\\\client\\\\src\\\\views\\\\cartView.js\",\n    _s = $RefreshSig$();\n\nimport { addToCart } from 'redux/products/productsSlice';\nimport { useSelector } from 'react-redux';\nimport get from '../components/API/Api';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartView = () => {\n  _s();\n\n  const products = useSelector(state => state.Cart);\n  const [allCart, setAllCart] = useState([]); // const [didMount, setDidMount] = useState(false);\n  // useEffect(() => {\n  //   setDidMount(true);\n  // }, []);\n\n  useEffect(() => {\n    products.forEach(item => {\n      get.getOneProduct(item.id).then(data => {\n        const {\n          name,\n          _id,\n          shop,\n          price,\n          detail,\n          image\n        } = data.data.result[0]; // const name = result.name;\n\n        console.log(name);\n        setAllCart(prevState => [...prevState, {\n          name,\n          _id,\n          shop,\n          price,\n          detail,\n          image,\n          qty: item.qty\n        }]);\n      }).catch(error => console.log(error.message));\n    });\n  }, [products]);\n  const uniqueIds = [];\n  const unique = allCart.filter(element => {\n    const isDuplicate = uniqueIds.includes(element.id);\n\n    if (!isDuplicate) {\n      uniqueIds.push(element.id);\n      return true;\n    }\n\n    return false;\n  });\n  console.log(uniqueIds);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hi rh==there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), unique.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.qty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(CartView, \"KvsE2MdaOxEWZfbuOEjgsV54GbA=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartView;\nexport default CartView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartView\");","map":{"version":3,"sources":["C:/Users/Irynka/Documents/devoveryApp/client/src/views/cartView.js"],"names":["addToCart","useSelector","get","useEffect","useState","CartView","products","state","Cart","allCart","setAllCart","forEach","item","getOneProduct","id","then","data","name","_id","shop","price","detail","image","result","console","log","prevState","qty","catch","error","message","uniqueIds","unique","filter","element","isDuplicate","includes","push","map"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC,CAFqB,CAGrB;AAEA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAI,IAAI;AACvBV,MAAAA,GAAG,CACAW,aADH,CACiBD,IAAI,CAACE,EADtB,EAEGC,IAFH,CAEQC,IAAI,IAAI;AACZ,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,GAAR;AAAaC,UAAAA,IAAb;AAAmBC,UAAAA,KAAnB;AAA0BC,UAAAA,MAA1B;AAAkCC,UAAAA;AAAlC,YAA4CN,IAAI,CAACA,IAAL,CAAUO,MAAV,CAAiB,CAAjB,CAAlD,CADY,CAEZ;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAP,QAAAA,UAAU,CAACgB,SAAS,IAAI,CACtB,GAAGA,SADmB,EAEtB;AACET,UAAAA,IADF;AAEEC,UAAAA,GAFF;AAGEC,UAAAA,IAHF;AAIEC,UAAAA,KAJF;AAKEC,UAAAA,MALF;AAMEC,UAAAA,KANF;AAOEK,UAAAA,GAAG,EAAEf,IAAI,CAACe;AAPZ,SAFsB,CAAd,CAAV;AAYD,OAlBH,EAmBGC,KAnBH,CAmBSC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB,CAnBlB;AAoBD,KArBD;AAsBD,GAvBQ,EAuBN,CAACxB,QAAD,CAvBM,CAAT;AAwBA,QAAMyB,SAAS,GAAG,EAAlB;AAEA,QAAMC,MAAM,GAAGvB,OAAO,CAACwB,MAAR,CAAeC,OAAO,IAAI;AACvC,UAAMC,WAAW,GAAGJ,SAAS,CAACK,QAAV,CAAmBF,OAAO,CAACpB,EAA3B,CAApB;;AAEA,QAAI,CAACqB,WAAL,EAAkB;AAChBJ,MAAAA,SAAS,CAACM,IAAV,CAAeH,OAAO,CAACpB,EAAvB;AAEA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAVc,CAAf;AAWAU,EAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,MAAM,CAACM,GAAP,CAAW1B,IAAI,IAAI;AAClB,0BACE;AAAA,gCACE;AAAA,oBAAIA,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIL,IAAI,CAACe;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CAFH;AAAA,kBADF;AAgBD,CAhED;;GAAMtB,Q;UACaJ,W;;;KADbI,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import { addToCart } from 'redux/products/productsSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport get from '../components/API/Api';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst CartView = () => {\r\n  const products = useSelector(state => state.Cart);\r\n  const [allCart, setAllCart] = useState([]);\r\n  // const [didMount, setDidMount] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   setDidMount(true);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    products.forEach(item => {\r\n      get\r\n        .getOneProduct(item.id)\r\n        .then(data => {\r\n          const { name, _id, shop, price, detail, image } = data.data.result[0];\r\n          // const name = result.name;\r\n          console.log(name);\r\n          setAllCart(prevState => [\r\n            ...prevState,\r\n            {\r\n              name,\r\n              _id,\r\n              shop,\r\n              price,\r\n              detail,\r\n              image,\r\n              qty: item.qty,\r\n            },\r\n          ]);\r\n        })\r\n        .catch(error => console.log(error.message));\r\n    });\r\n  }, [products]);\r\n  const uniqueIds = [];\r\n\r\n  const unique = allCart.filter(element => {\r\n    const isDuplicate = uniqueIds.includes(element.id);\r\n\r\n    if (!isDuplicate) {\r\n      uniqueIds.push(element.id);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n  console.log(uniqueIds);\r\n\r\n  return (\r\n    <>\r\n      <p>hi rh==there</p>\r\n      {unique.map(item => {\r\n        return (\r\n          <li>\r\n            <p>{item.name}</p>\r\n            <p>{item.qty}</p>\r\n          </li>\r\n        );\r\n      })}\r\n      {/* <button onClick={() => console.log(allProductInTheCard)}>\r\n        gdvfjyhdf\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartView;\r\n"]},"metadata":{},"sourceType":"module"}